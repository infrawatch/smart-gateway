git:
  depth: 1
language: go
go:
- 1.11.x
sudo: required
dist: xenial
services:
- docker
env:
  global:
  - REGISTRY_USER="nfvperobot"
  - secure: pv9Ti1pifBsF9Gv1RKqO6H0lR7/YtiHCWnQHIukVfAzKd3tDHK+xDW5AjnO9fmuy8XAxDwTvFuIYPboJwI1a24nGgDD+bU1OSBJzHvZydnQrUi0AI14w7kHnN6gSGrxlP98d6y69S6ZDTeAO88N6qudyfsjc7GUJ7GiXuqmCGv3cqfwccYO4ZSivVIGtQA0iEndrhurmBSStGD4lviFavshNqixC4EgJNE0p6r3wEnDlchEiH0a5g8My6GFgfKynNGgSgMVGDkAbBVgFFt9vcs58dF/zuhrt5H0yDL29e/EwGTijQ02/w+xeMZpLdg/WLBc4bdhEmKj8Ee/HLBFjY52QNZwomp0gaLIJXfG/F+uxOu41BZd7nDaOr9G7uIhIoZqQj0P/EHGq6fHvpYtGxQU9p9vguzDuBaEZddiekrE+X/5aMEf0oVGTEb6fAn7zs6BRwYx8AEuB2/I+dfbJMLnClDv67gVYYTRQdNtey/8hGEpRggVdd0vQw7FX6c8pRNhhBCZk2tRlDrzdkY2hftaJHALlOB7FVHaPjmUTf1MfzlEORlwt79XbtJeYL6VivgOOREk8ZhVJdqzSzbSNRkkzw7/K6x7SWEd0z+lRBcRxzsxG3uRxi7BNmI8jWIWYaRbaqw9TAxLKPSvNAG2lemDvlIt9Em0JWPIF/NoZi8Q=
  - secure: Nhc7/4h45Fpj/jjsObzRt4zAjUCEeBornHjdKY0z2OIsWcsRJnTV7FWsOWjyprnD/O4TQi2TQQqUzUr+MK+3/fVsB94ivUrTr2DHOtvJBwQcz1YzMsEwOvqMkd+1iXfafWT+NHtkJlxoKu69UYKpZvGIRuxW+GFO1cgERikYxJ40AMV5mGD+GnF7cJaRmXkzTEfgfRBHazwrYiP0vsdCIpoe9m45z3Z2kkh/F5o7sUD9hc/bG7HUR8TwxoBfjVxWGkcZ8r8T5SG0fhg9p1Sm0QSIFOuu0VoTyWUCSdcCuZNjfIKWJjhO5GhX7rN418PTfUyEGBsG5p70lSap2ywLDxLuaXi5BgLhZiXvJ81jVcd5Xlru66MAGoMrvnlf4FNm/pnEYH0ctVrnbi2Ds+CkxW7u2/Yj0TsLsFylKSn1SRtWC1Ju8kIPrMNA+zuwdV5x/ddl6vxhThYva9GhqwTWF+vsApmQDe+pH8QijX9CFEevDpBuE8h02uKV7OcyaEQUiYwAWvyLI4+KRwMYB/KLG8Os2zp3QJVuB2rVVxnLVNbV5fBIf5xcQimOGsKclTQvRIJerE7Uh6XW27iUx18hn3lMngktfcIytLs3Vhr3RadcSJc3BT6dkErDH286BCPGvkvTNqUz/YgBIuMXHozlN5rUNIo9/V0Ek3H+DsEseik=
before_install:
# run local elascticsearch
- docker pull docker.elastic.co/elasticsearch/elasticsearch:6.0.1
- docker run -p 9200:9200 --name elastic -p 9300:9300 -e "discovery.type=single-node" -d docker.elastic.co/elasticsearch/elasticsearch:6.0.1
# run local qdr
- docker pull quay.io/interconnectedcloud/qdrouterd:1.5.0
- docker run -p 5672:5672 -d quay.io/interconnectedcloud/qdrouterd:1.5.0
# run unit test
- sleep 10
- docker logs elastic
- docker pull centos:7
- docker run -uroot --network host -it --volume $PWD:/go/src/github.com/redhat-service-assurance/smart-gateway:z --workdir /go/src/github.com/redhat-service-assurance/smart-gateway centos:7 /bin/sh -c 'sh ./run_tests.sh'
install:
- go get -u golang.org/x/tools/cmd/cover
- go get -u github.com/mattn/goveralls
- go get -u golang.org/x/lint/golint
- go get -u github.com/golang/dep/...
script:
- $GOPATH/bin/dep ensure -v --vendor-only
- go vet ./cmd/main.go
- golint . | xargs -r false
before_deploy:
- docker login -u $REGISTRY_USER -p $REGISTRY_PASS
- docker build --tag nfvpe/smart_gateway:latest .
- docker images
deploy:
  provider: script
  script: docker push nfvpe/smart_gateway:latest
  on:
    branch: master
after_success:
# works correctly only with Go-1.11+ due to: https://github.com/golang/go/issues/25093
- echo "mode: set" > coverage.out
- for pkg in $(go list ./internal/pkg/...); do
    go test -cover -coverpkg $pkg -coverprofile coverfragment.out ./tests/internal_pkg/*;
    grep -h -v "mode: set" coverfragment.out >> coverage.out;
  done
- $GOPATH/bin/goveralls -coverprofile=coverage.out -service=travis-ci -repotoken $COVERALLS_TOKEN
